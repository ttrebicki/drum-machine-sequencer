{"version":3,"sources":["components/drumMachine/drumMachine.module.scss","components/sequencer/Sequencer.module.scss","constants/drumMachine.constants.ts","state/drumMachine/drumMachine.functions.ts","files/drumHits/kick.wav","files/drumHits/test.wav","files/drumHits/hihat_o.wav","files/drumHits/ride.wav","files/drumHits/crash.wav","files/drumHits/tom_1.wav","files/drumHits/tom_2.wav","files/drumHits/snare_1.wav","files/drumHits/snare_2.wav","files/drumHits/snowball.wav","files/drumHits/bottlepick.wav","files/drumHits/footstep.wav","state/drumMachine/drumMachineSlice.ts","components/drumMachine/subcompo/drumPad.tsx","state/sequencer/Sequencer.functions.ts","state/sequencer/SequencerSlice.ts","components/sequencer/Sequencer.tsx","components/drumMachine/DrumMachine.tsx","App.tsx","state/store.js","serviceWorker.js","index.js"],"names":["module","exports","DRUM_HIT_0","DRUM_HIT_1","DRUM_HIT_2","DRUM_HIT_3","DRUM_HIT_4","DRUM_HIT_5","DRUM_HIT_6","DRUM_HIT_7","DRUM_HIT_8","DRUM_HIT_9","DRUM_HIT_10","DRUM_HIT_11","switcher","p","defaultMessage","DrumHits","findElemAndPlay","state","payload","elemAudio","document","getElementById","elemParent","pause","currentTime","play","playSound","style","background","transform","setTimeout","rotatePad","drumsSlice","createSlice","name","initialState","drumHits","hihat_o","crash","ride","hihat","tom_1","tom_2","kick","snare_1","snare_2","snowball","bottlepick","footstep","currentKey","reducers","currentHitSetter","action","playKey","actions","selectDrumKey","drums","selectCurrentKey","DrumPad","props","dispatch","useDispatch","id","drumKey","className","styles","drum_pad","onClick","clip","src","drumHit","playAllSteps","bpm","elemStep","madeSteps","measure","map","currentElement","Object","keys","filter","sound","makeSteps","playStepbyStep","index","beats","s","tempo","recursivePlayer","i","toString","blowTheStep","length","boxShadow","sequencerSlice","push","playSequence","toggleHit","step","sequenceSelector","sequencer","Sequencer","sequence","sequenceFromState","useSelector","playSteps","a","sounds","keyName","IconButton","cn","active","toggleSound","Button","variant","size","disableElevation","DrumMachine","drumsArr","entries","drum_machine","drum_row","display","pads","renderDrumPads","App","onKeyDown","event","e","key","toUpperCase","tabIndex","configureStore","reducer","drumsReducer","sequencerReducer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","store","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"sGACAA,EAAOC,QAAU,CAAC,QAAU,6BAA6B,aAAe,kCAAkC,SAAW,8BAA8B,KAAO,4B,mBCA1JD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,KAAO,wBAAwB,MAAQ,yBAAyB,OAAS,0BAA0B,KAAO,wBAAwB,KAAO,0B,6ICCvLC,EACJ,UADIA,EAEN,IAGMC,EACJ,QADIA,EAEN,IAGMC,EACJ,OADIA,EAEN,IAGMC,EACJ,QADIA,EAEN,IAGMC,EACJ,QADIA,EAEN,IAGMC,EACJ,QADIA,EAEN,IAGMC,EACJ,OADIA,EAEN,IAGMC,EACJ,UADIA,EAEN,IAGMC,EACJ,UADIA,EAEN,IAGMC,EACJ,WADIA,EAEN,IAGMC,EACJ,aADIA,EAEN,IAGMC,EACJ,WADIA,EAEN,IC/BMC,EAAW,SAACC,GAAqC,IAAzBC,EAAwB,uDAAP,GACpD,OAAQD,GACN,KAAKE,EACL,KAAKA,EACH,OAAOA,EAET,KAAKA,EACL,KAAKA,EACH,OAAOA,EAET,KAAKA,EACL,KAAKA,EACH,OAAOA,EAET,KAAKA,EACL,KAAKA,EACH,OAAOA,EAET,KAAKA,EACL,KAAKA,EACH,OAAOA,EAET,KAAKA,EACL,KAAKA,EACH,OAAOA,EAET,KAAKA,EACL,KAAKA,EACH,OAAOA,EAET,KAAKA,EACL,KAAKA,EACH,OAAOA,EAET,KAAKA,EACL,KAAKA,EACH,OAAOA,EAET,KAAKA,EACL,KAAKA,EACH,OAAOA,EAET,KAAKA,EACL,KAAKA,EACH,OAAOA,EAET,KAAKA,EACL,KAAKA,EACH,OAAOA,EAET,QACE,OAAOD,IAIAE,EAAkB,SAC7BC,EACAC,GAEA,IAAMC,EAAkBC,SAASC,eAC/BT,EAASM,IAELI,EAAaF,SAASC,eAAe,YAAcT,EAASM,IAE9DI,GAAcH,IAzFK,SAACA,GACpBA,IACFA,EAAUI,QACVJ,EAAUK,YAAc,EACxBL,EAAUM,QAuFVC,CAAUP,GAnFW,SAACG,GACxBA,EAAWK,MAAMC,WAAa,OAC9BN,EAAWK,MAAME,UAAY,yBAE7BC,YAAW,WACTR,EAAWK,MAAMC,WAAa,GAC9BN,EAAWK,MAAME,UAAY,2BAC5B,KA6EDE,CAAUT,KC/FC,MAA0B,iCCA1B,MAA0B,iCCA1B,MAA0B,oCCA1B,MAA0B,iCCA1B,MAA0B,kCCA1B,MAA0B,kCCA1B,MAA0B,kCCA1B,MAA0B,oCCA1B,MAA0B,oCCA1B,MAA0B,qCCA1B,MAA0B,uCCA1B,MAA0B,qCCiB5BU,EAAaC,YAAY,CACpCC,KAAM,QACNC,aAAc,CACZC,SAAU,CACRC,QAASA,EACTC,MAAOA,EACPC,KAAMA,EACNC,MAAOA,EACPC,MAAOA,EACPC,MAAOA,EACPC,KAAMA,EACNC,QAASA,EACTC,QAASA,EACTC,SAAUA,EACVC,WAAYA,EACZC,SAAUA,GAEZC,WAAY,6BAGdC,SAAU,CACRC,iBAAkB,SACdlC,EACAmC,GAEFnC,EAAMgC,WAAarC,EAASwC,EAAOlC,UAErCmC,QAAS,SAACpC,EAAOmC,GAAR,OAAmBpC,EAAgBC,EAAOmC,EAAOlC,aAIvD,EAAsCc,EAAWsB,QAAzCH,EAAR,EAAQA,iBAAkBE,EAA1B,EAA0BA,QAIpBE,EAAgB,SAACtC,GAAD,OAAmBA,EAAMuC,MAAMpB,UAC/CqB,EAAmB,SAACxC,GAAD,OAAmBA,EAAMuC,MAAMP,YAEhDjB,IAAf,Q,4BC7Ca0B,GAAU,SAACC,GACtB,IAAMC,EAAWC,cAMjB,OACE,uBACEC,GAAI,YAAcH,EAAMI,QACxBC,UAAW,kBAAoBC,KAAOC,SACtCC,QATgB,WAClBP,EAASP,EAAQM,EAAMI,UACvBH,EAAST,EAAiBQ,EAAMI,WAIhC,UAKGJ,EAAMI,QACP,wBACEC,UAAW,QAAUC,KAAOG,KAC5BN,GAAIH,EAAMI,QACVM,IAAKV,EAAMW,c,iDCbNC,GAAe,SAACtD,EAAwBuD,GACnD,IAEIC,EAFAC,EAZmB,SAACzD,GAQxB,OAPcA,EAAM0D,QAAQC,KAAI,SAACC,GAK/B,OAJiBC,OAAOC,KAAKF,GAAgBG,QAAO,SAACC,GACnD,OAAOJ,EAAeI,SASVC,CAAUjE,IAIH,SAAjBkE,IAAyD,IAAvCC,EAAsC,uDAA9B,EAAGC,EAA2B,uDAAnBb,EAAKc,EAAc,uDAAVrE,EAC5CsE,EAAS,IAAaf,EAAM,EAC5BgB,EAAkB1D,YAAW,WAAgB,IAAf2D,EAAc,uDAAVL,EACtCD,EAAeM,EAAGJ,EAAOC,KACxBC,GAYH,OAVAb,EAAUU,GAAOR,KAAI,SAACK,IACpBR,EAAWrD,SAASC,eAAe,QAAU+D,EAAMM,eAEjD1E,EAAgBC,EAAOgE,GACvBU,GAAYlB,SAIhBW,EAEYV,EAAUkB,SAGpBR,EAAQ,GAFDI,EAMXL,IAGWQ,GAAc,SAAClB,GAC1BA,EAAS9C,MAAMC,WAAa,OAC5B6C,EAAS9C,MAAMkE,UAAY,oBAE3B/D,YAAW,WACT2C,EAAS9C,MAAMC,WAAa,cAC5B6C,EAAS9C,MAAMkE,UAAY,SAC1B,MCzBQC,GAAiB7D,YAAY,CACxCC,KAAM,YACNC,aAAc,CACZwC,QA1BY,WACd,IACIc,EADEd,EAAU,GAEhB,IAAKc,EAAI,EAAGA,EAAI,GAAIA,IAClBd,EAAQoB,KAAK,CACXpD,MAAM,EACNH,OAAO,EACPH,SAAS,EACTO,SAAS,EACTC,SAAS,EACTJ,OAAO,EACPC,OAAO,EACPH,MAAM,EACND,OAAO,EACPU,UAAU,EACVF,UAAU,EACVC,YAAY,IAIhB,OAAO4B,EAMIA,IAEXzB,SAAU,CACR8C,aAAc,SAAC/E,GACbsD,GAAatD,EAAO,MAGtBgF,UAAW,SAAChF,EAAwBmC,GAElC,IAAI8C,EAAO9C,EAAOlC,QAAQgF,KACtBjB,EAAQ7B,EAAOlC,QAAQ+D,MAE3BhE,EAAM0D,QAAQuB,GAAMjB,IAAUhE,EAAM0D,QAAQuB,GAAMjB,OAKjD,GAAoCa,GAAexC,QAA3C0C,GAAR,GAAQA,aAAcC,GAAtB,GAAsBA,UAEhBE,GAAmB,SAAClF,GAAD,OAAmBA,EAAMmF,UAAUzB,SAEpDmB,MAAf,Q,0DCxCaO,GAAY,WACvB,IAWqBC,EAXfC,EAAoBC,YAAYL,IAEhCvC,EAAWC,cAKX4C,EAAS,yCAAG,uBAAAC,EAAA,sDAChB9C,EAASoC,MADO,2CAAH,qDAkCf,OACE,uBAAKhC,UAAWC,KAAOmC,UAAvB,WA/BmBE,EAgCJC,EA/BED,EAAS1B,KAAI,SAACC,EAAgBO,GAC7C,IAAMuB,EAAS7B,OAAOC,KAAKF,GAAgBD,KAAI,SAACgC,GAC9C,IAAIV,EAAOd,EACX,OACE,eAACyB,GAAA,EAAD,CACE7C,UAAW8C,KACT7C,KAAOgB,MACPJ,EAAe+B,IAAY3C,KAAO8C,QAGpC5C,QAAS,kBAnBC,SAACc,EAAeiB,GAClCtC,EAASqC,GAAU,CAAEhB,QAAOiB,UAkBLc,CAAYJ,EAASV,IANtC,SAOC,eAAC,KAAD,KAFMd,EAAQwB,MAMnB,OACE,qBACE5C,UAAWC,KAAOiC,KAClBpC,GAAI,QAAUsB,EAAMM,WAFtB,SAKGiB,GAFIvB,SAaT,eAAC6B,GAAA,EAAD,CAAQjD,UAAWC,KAAOxC,KAAMyF,QAAS,YAAaC,KAAM,QAASC,kBAAkB,EAAMjD,QAASsC,EAAtG,sBCjDOY,GAAc,WACzB,IAAMpE,EAAauD,YAAY/C,GACzBM,EAAUyC,YAAYjD,GACtB+D,EAAWxC,OAAOyC,QAAQxD,GA6BhC,OACE,uCACE,uBAAKD,GAAG,eAAeE,UAAWC,KAAOuD,aAAzC,UACE,sBAAKxD,UAAW,OAASC,KAAOwD,SAAhC,SACE,sBAAK3D,GAAG,UAAUE,UAAW,UAAYC,KAAOyD,QAAhD,SACGzE,MAhCY,WAGrB,IAFA,IAAM0E,EAA8B,GAE3BlC,EAAI,EAAGA,EAAI6B,EAAS1B,OAAQH,IACzB,IAANA,GAAWA,EAAI,IAAM,GACvBkC,EAAK5B,KACH,uBAEEjC,GAAI,QAAU2B,EAAI,EAAI,GACtBzB,UAAW,OAASC,KAAOwD,SAH7B,UAKE,eAAC,GAAD,CAAS1D,QAASuD,EAAS7B,GAAG,GAAInB,QAASgD,EAAS7B,GAAG,KACvD,eAAC,GAAD,CACE1B,QAASuD,EAAS7B,EAAI,GAAG,GACzBnB,QAASgD,EAAS7B,EAAI,GAAG,KAE3B,eAAC,GAAD,CACE1B,QAASuD,EAAS7B,EAAI,GAAG,GACzBnB,QAASgD,EAAS7B,EAAI,GAAG,OAXtB,QAAUA,EAAI,EAAI,KAiB/B,OAAOkC,EAWFC,MAEH,eAAC,GAAD,QC7BSC,I,MAdH,WACV,IAAMjE,EAAWC,cAMjB,OACE,sBAAKG,UAAU,MAAM8D,UAAW,SAAAC,GAAK,OALrCnE,EAASP,GADY2E,EAMkCD,GALpCE,IAAIC,qBACvBtE,EAAST,EAAiB6E,EAAEC,IAAIC,gBAFZ,IAACF,GAM0CG,SAAU,EAAzE,SACE,eAAC,GAAD,QCVSC,eAAe,CAC5BC,QAAS,CACP7E,MAAO8E,EACPlC,UAAWmC,MCITC,GAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAACC,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBtI,QACfgI,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,iHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,WAO5BU,OAAM,SAACC,GACNL,QAAQK,MAAM,4CAA6CA,M,MCvFjEC,IAASC,OACP,eAAC,IAAMC,WAAP,UACE,eAAC,IAAD,CAAUC,MAAOA,GAAjB,SACE,eAAC,GAAD,QAGJhJ,SAASC,eAAe,SDOnB,SAAkB2H,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIoB,IAAIC,0BAAwB5B,OAAOC,SAAS4B,MACpDC,SAAW9B,OAAOC,SAAS6B,OAIvC,OAGF9B,OAAO+B,iBAAiB,QAAQ,WAC9B,IAAM1B,EAAK,UAAMuB,0BAAN,sBAEP9B,KAgEV,SAAiCO,EAAOC,GAEtC0B,MAAM3B,EAAO,CACX4B,QAAS,CAAE,iBAAkB,YAE5BvB,MAAK,SAACwB,GAEL,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C/B,UAAUC,cAAc+B,MAAM7B,MAAK,SAACC,GAClCA,EAAa6B,aAAa9B,MAAK,WAC7BV,OAAOC,SAASwC,eAKpBrC,GAAgBC,EAAOC,MAG1Be,OAAM,WACLJ,QAAQC,IACN,oEAvFAwB,CAAwBrC,EAAOC,GAI/BC,UAAUC,cAAc+B,MAAM7B,MAAK,WACjCO,QAAQC,IACN,mHAMJd,GAAgBC,EAAOC,OC7B/BE,K","file":"static/js/main.4fb04e1b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"display\":\"drumMachine_display__2-2zG\",\"drum_machine\":\"drumMachine_drum_machine__e5kg-\",\"drum_pad\":\"drumMachine_drum_pad__22K0V\",\"clip\":\"drumMachine_clip__2IeJ_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sequencer\":\"Sequencer_sequencer__15iQ6\",\"step\":\"Sequencer_step__3Tm2V\",\"sound\":\"Sequencer_sound__2PGz1\",\"active\":\"Sequencer_active__1l_PC\",\"spin\":\"Sequencer_spin__2rQWe\",\"play\":\"Sequencer_play__iuqrI\"};","// KEYBINDING\n\nexport const DRUM_HIT_0 = {\n  sound: \"hihat_o\",\n  key: \"Q\",\n};\n\nexport const DRUM_HIT_1 = {\n  sound: \"crash\",\n  key: \"W\",\n};\n\nexport const DRUM_HIT_2 = {\n  sound: \"ride\",\n  key: \"E\",\n};\n\nexport const DRUM_HIT_3 = {\n  sound: \"hihat\",\n  key: \"A\",\n};\n\nexport const DRUM_HIT_4 = {\n  sound: \"tom_1\",\n  key: \"S\",\n};\n\nexport const DRUM_HIT_5 = {\n  sound: \"tom_2\",\n  key: \"D\",\n};\n\nexport const DRUM_HIT_6 = {\n  sound: \"kick\",\n  key: \"Z\",\n};\n\nexport const DRUM_HIT_7 = {\n  sound: \"snare_1\",\n  key: \"X\",\n};\n\nexport const DRUM_HIT_8 = {\n  sound: \"snare_2\",\n  key: \"C\",\n};\n\nexport const DRUM_HIT_9 = {\n  sound: \"snowball\",\n  key: \"R\",\n};\n\nexport const DRUM_HIT_10 = {\n  sound: \"bottlepick\",\n  key: \"T\",\n};\n\nexport const DRUM_HIT_11 = {\n  sound: \"footstep\",\n  key: \"Y\",\n};","import { IDrumMachineState, ISequencerState } from \"../types\";\nimport * as DrumHits from \"../../constants/drumMachine.constants\";\n\nexport const playSound = (elemAudio : HTMLAudioElement | null) => {\n  if (elemAudio) {\n    elemAudio.pause();\n    elemAudio.currentTime = 0;\n    elemAudio.play()\n  }\n};\n\nexport const rotatePad = (elemParent : HTMLElement) => {\n  elemParent.style.background = \"#f55\";\n  elemParent.style.transform = \"rotate3d(1,1,1,180deg)\";\n\n  setTimeout(() => {\n    elemParent.style.background = \"\";\n    elemParent.style.transform = \"rotate3d(1,1,1,720deg)\";\n  }, 100);\n};\n\nexport const currentHitScreenSetter = (\n  state: IDrumMachineState,\n  payload: string\n) => {\n  state.currentKey = switcher(payload);\n};\n\nexport const switcher = (p : string, defaultMessage = '') => {\n  switch (p) {\n    case DrumHits.DRUM_HIT_0.key:\n    case DrumHits.DRUM_HIT_0.sound:\n      return DrumHits.DRUM_HIT_0.sound;\n\n    case DrumHits.DRUM_HIT_1.key:\n    case DrumHits.DRUM_HIT_1.sound:\n      return DrumHits.DRUM_HIT_1.sound;\n\n    case DrumHits.DRUM_HIT_2.key:\n    case DrumHits.DRUM_HIT_2.sound:\n      return DrumHits.DRUM_HIT_2.sound;\n\n    case DrumHits.DRUM_HIT_3.key:\n    case DrumHits.DRUM_HIT_3.sound:\n      return DrumHits.DRUM_HIT_3.sound;\n\n    case DrumHits.DRUM_HIT_4.key:\n    case DrumHits.DRUM_HIT_4.sound:\n      return DrumHits.DRUM_HIT_4.sound;\n\n    case DrumHits.DRUM_HIT_5.key:\n    case DrumHits.DRUM_HIT_5.sound:\n      return DrumHits.DRUM_HIT_5.sound;\n\n    case DrumHits.DRUM_HIT_6.key:\n    case DrumHits.DRUM_HIT_6.sound:\n      return DrumHits.DRUM_HIT_6.sound;\n\n    case DrumHits.DRUM_HIT_7.key:\n    case DrumHits.DRUM_HIT_7.sound:\n      return DrumHits.DRUM_HIT_7.sound;\n\n    case DrumHits.DRUM_HIT_8.key:\n    case DrumHits.DRUM_HIT_8.sound:\n      return DrumHits.DRUM_HIT_8.sound;\n\n    case DrumHits.DRUM_HIT_9.key:\n    case DrumHits.DRUM_HIT_9.sound:\n      return DrumHits.DRUM_HIT_9.sound;\n\n    case DrumHits.DRUM_HIT_10.key:\n    case DrumHits.DRUM_HIT_10.sound:\n      return DrumHits.DRUM_HIT_10.sound;\n\n    case DrumHits.DRUM_HIT_11.key:\n    case DrumHits.DRUM_HIT_11.sound:\n      return DrumHits.DRUM_HIT_11.sound;\n\n    default:\n      return defaultMessage;\n  }\n};\n\nexport const findElemAndPlay = (\n  state: IDrumMachineState | ISequencerState,\n  payload: string\n) => {\n  const elemAudio : any = document.getElementById(\n    switcher(payload)\n  );\n  const elemParent = document.getElementById(\"drum-pad-\" + switcher(payload));\n\n  if (elemParent && elemAudio) {\n    // currentHitScreenSetter(state, switcher(payload));\n    playSound(elemAudio);\n    rotatePad(elemParent);\n  }\n};","export default __webpack_public_path__ + \"static/media/kick.d0344def.wav\";","export default __webpack_public_path__ + \"static/media/test.b7308e39.wav\";","export default __webpack_public_path__ + \"static/media/hihat_o.6966be37.wav\";","export default __webpack_public_path__ + \"static/media/ride.e0b327a3.wav\";","export default __webpack_public_path__ + \"static/media/crash.ca0ea007.wav\";","export default __webpack_public_path__ + \"static/media/tom_1.9d94aac4.wav\";","export default __webpack_public_path__ + \"static/media/tom_2.c46e6ffc.wav\";","export default __webpack_public_path__ + \"static/media/snare_1.a2a1ab05.wav\";","export default __webpack_public_path__ + \"static/media/snare_2.7b098e83.wav\";","export default __webpack_public_path__ + \"static/media/snowball.519a15e4.wav\";","export default __webpack_public_path__ + \"static/media/bottlepick.e86440ba.wav\";","export default __webpack_public_path__ + \"static/media/footstep.a2883dbe.wav\";","import { createSlice } from \"@reduxjs/toolkit\";\nimport {findElemAndPlay, switcher} from \"./drumMachine.functions\";\n\nimport kick from \"../../files/drumHits/kick.wav\";\nimport hihat from \"../../files/drumHits/test.wav\";\nimport hihat_o from \"../../files/drumHits/hihat_o.wav\";\nimport ride from \"../../files/drumHits/ride.wav\";\nimport crash from \"../../files/drumHits/crash.wav\";\nimport tom_1 from \"../../files/drumHits/tom_1.wav\";\nimport tom_2 from \"../../files/drumHits/tom_2.wav\";\nimport snare_1 from \"../../files/drumHits/snare_1.wav\";\nimport snare_2 from \"../../files/drumHits/snare_2.wav\";\nimport snowball from \"../../files/drumHits/snowball.wav\";\nimport bottlepick from \"../../files/drumHits/bottlepick.wav\";\nimport footstep from \"../../files/drumHits/footstep.wav\";\nimport {IDrumMachineState, IState} from \"../types\";\n\nexport const drumsSlice = createSlice({\n  name: \"drums\",\n  initialState: {\n    drumHits: {\n      hihat_o: hihat_o,\n      crash: crash,\n      ride: ride,\n      hihat: hihat,\n      tom_1: tom_1,\n      tom_2: tom_2,\n      kick: kick,\n      snare_1: snare_1,\n      snare_2: snare_2,\n      snowball: snowball,\n      bottlepick: bottlepick,\n      footstep: footstep,\n    },\n    currentKey: \":: PRESS A KEY TO PLAY ::\",\n  },\n\n  reducers: {\n    currentHitSetter: (\n        state: IDrumMachineState,\n        action\n    ) => {\n      state.currentKey = switcher(action.payload);\n    },\n    playKey: (state, action) => findElemAndPlay(state, action.payload),\n  },\n});\n\nexport const { currentHitSetter, playKey } = drumsSlice.actions;\n\nexport const selectDrumHit = (state: IState) => (drumHit: string) =>\n  state.drums.drumHits[drumHit];\nexport const selectDrumKey = (state: IState) => state.drums.drumHits;\nexport const selectCurrentKey = (state: IState) => state.drums.currentKey;\n\nexport default drumsSlice.reducer;","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {currentHitSetter, playKey} from \"../../../state/drumMachine/drumMachineSlice\";\nimport styles from \"../drumMachine.module.scss\";\n\ninterface IDrumPadProps {\n  drumKey: string;\n  drumHit: string;\n}\n\nexport const DrumPad = (props: IDrumPadProps) => {\n  const dispatch = useDispatch();\n  const handleClick = () => {\n    dispatch(playKey(props.drumKey /*, props.drumHit*/));\n    dispatch(currentHitSetter(props.drumKey))\n  };\n\n  return (\n    <div\n      id={\"drum-pad-\" + props.drumKey}\n      className={\"col-4 drum-pad \" + styles.drum_pad}\n      onClick={handleClick}\n    >\n      {props.drumKey}\n      <audio\n        className={\"clip \" + styles.clip}\n        id={props.drumKey}\n        src={props.drumHit}\n      ></audio>\n    </div>\n  );\n};\n","import { findElemAndPlay } from \"../drumMachine/drumMachine.functions\";\nimport { ISequencerState } from \"../types\";\n\nexport const makeSteps = (state: ISequencerState) => {\n  const steps = state.measure.map((currentElement) => {\n    let stepSounds = Object.keys(currentElement).filter((sound) => {\n      return currentElement[sound];\n    });\n\n    return stepSounds;\n  });\n  return steps;\n};\n\nexport const playAllSteps = (state: ISequencerState, bpm: number) => {\n  var madeSteps = makeSteps(state);\n\n  var elemStep;\n\n  const playStepbyStep = (index = 0, beats = bpm, s = state) => {\n    const tempo = (1000 * 60) / bpm / 4;\n    const recursivePlayer = setTimeout((i = index) => {\n      playStepbyStep(i, beats, s);\n    }, tempo);\n\n    madeSteps[index].map((sound) => {\n      elemStep = document.getElementById(\"step-\" + index.toString());\n      if (elemStep) {\n        findElemAndPlay(state, sound);\n        blowTheStep(elemStep);\n      }\n    });\n\n    index++;\n\n    if (index < madeSteps.length) {\n      return recursivePlayer;\n    } else {\n      index = 0;\n      return recursivePlayer;\n    }\n  };\n  playStepbyStep();\n};\n\nexport const blowTheStep = (elemStep: HTMLElement) => {\n  elemStep.style.background = \"#fff\";\n  elemStep.style.boxShadow = \"0 0 16px 4px #f55\";\n\n  setTimeout(() => {\n    elemStep.style.background = \"transparent\";\n    elemStep.style.boxShadow = \"none\";\n  }, 100);\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { IState, ISequencerState } from \"../types\";\nimport { playAllSteps } from \"./Sequencer.functions\";\n\nconst measure = () => {\n  const measure = []\n  let i;\n  for (i = 0; i < 16; i++) {\n    measure.push({\n      kick: false,\n      hihat: false,\n      hihat_o: false,\n      snare_1: false,\n      snare_2: false,\n      tom_1: false,\n      tom_2: false,\n      ride: false,\n      crash: false,\n      footstep: false,\n      snowball: false,\n      bottlepick: false,\n    })\n  }\n\n  return measure\n}\n\nexport const sequencerSlice = createSlice({\n  name: \"sequencer\",\n  initialState: {\n    measure: measure(),\n  },\n  reducers: {\n    playSequence: (state: ISequencerState) => {\n      playAllSteps(state, 130);\n    },\n\n    toggleHit: (state: ISequencerState, action) => {\n      // na kliknięcie obecny stan zmieniamy na odwrotny\n      let step = action.payload.step;\n      let sound = action.payload.sound;\n\n      state.measure[step][sound] = !state.measure[step][sound];\n    },\n  },\n});\n\nexport const { playSequence, toggleHit } = sequencerSlice.actions;\n\nexport const sequenceSelector = (state: IState) => state.sequencer.measure;\n\nexport default sequencerSlice.reducer;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport cn from \"classnames\";\n\nimport { playSequence, sequenceSelector, toggleHit } from \"../../state/sequencer/SequencerSlice\";\nimport { ISequencerStep } from \"../../state/types\";\nimport styles from \"./Sequencer.module.scss\";\nimport {Button, IconButton} from \"@material-ui/core\";\nimport AdbIcon from '@material-ui/icons/Adb';\n\nexport const Sequencer = () => {\n  const sequenceFromState = useSelector(sequenceSelector);\n\n  const dispatch = useDispatch();\n  const toggleSound = (sound: string, step: number) => {\n    dispatch(toggleHit({ sound, step }));\n  };\n\n  const playSteps = async () => {\n    dispatch(playSequence());\n  };\n\n  const renderSteps = (sequence: ISequencerStep[]) => {\n    const allSteps = sequence.map((currentElement, index) => {\n      const sounds = Object.keys(currentElement).map((keyName) => {\n        let step = index;\n        return (\n          <IconButton\n            className={cn(\n              styles.sound,\n              currentElement[keyName] && styles.active\n            )}\n            key={index + keyName}\n            onClick={() => toggleSound(keyName, step)}\n          ><AdbIcon/></IconButton>\n        );\n      });\n\n      return (\n        <ul\n          className={styles.step}\n          id={\"step-\" + index.toString()}\n          key={index++}\n        >\n          {sounds}\n        </ul>\n      );\n    });\n\n    return allSteps;\n  };\n\n  return (\n    <div className={styles.sequencer}>\n      {renderSteps(sequenceFromState)}\n      <Button className={styles.play} variant={'contained'} size={'large'} disableElevation={true} onClick={playSteps}>\n        PLAY\n      </Button>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectCurrentKey, selectDrumKey } from \"../../state/drumMachine/drumMachineSlice\";\nimport { DrumPad } from \"./subcompo/drumPad\";\nimport styles from \"./drumMachine.module.scss\";\nimport { Sequencer } from \"../sequencer/Sequencer\";\n\nexport const DrumMachine = () => {\n  const currentKey = useSelector(selectCurrentKey); // tekst do displaya;\n  const drumKey = useSelector(selectDrumKey); // obiekt z drum samplami (i keymappingami - juz nie - do zmiany);\n  const drumsArr = Object.entries(drumKey); // zmienia powyższy obiekt w arr;\n\n  const renderDrumPads = () => {\n    const pads : React.ReactElement[] = [];\n\n    for (var i = 0; i < drumsArr.length; i++) {\n      if (i === 0 || i % 3 === 0) {\n        pads.push(\n          <div\n            key={\"row-\" + (i / 3 + 1)}\n            id={\"row-\" + (i / 3 + 1)}\n            className={\"row \" + styles.drum_row}\n          >\n            <DrumPad drumKey={drumsArr[i][0]} drumHit={drumsArr[i][1]} />\n            <DrumPad\n              drumKey={drumsArr[i + 1][0]}\n              drumHit={drumsArr[i + 1][1]}\n            />\n            <DrumPad\n              drumKey={drumsArr[i + 2][0]}\n              drumHit={drumsArr[i + 2][1]}\n            />\n          </div>\n        );\n      }\n    }\n    return pads;\n  };\n\n  return (\n    <>\n      <div id=\"drum-machine\" className={styles.drum_machine}>\n        <div className={\"row \" + styles.drum_row}>\n          <div id=\"display\" className={\"col-12 \" + styles.display}>\n            {currentKey}\n          </div>\n        </div>\n        {renderDrumPads()}\n      </div>\n      <Sequencer />\n    </>\n  );\n};\n","import React, { KeyboardEvent } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { DrumMachine } from \"./components/drumMachine/DrumMachine\";\nimport {currentHitSetter, playKey} from \"./state/drumMachine/drumMachineSlice\";\nimport \"./App.scss\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const handleKeyDown = (e: KeyboardEvent) => {\n    dispatch(playKey(e.key.toUpperCase()));\n    dispatch(currentHitSetter(e.key.toUpperCase()))\n  };\n\n  return (\n    <div className=\"App\" onKeyDown={event => handleKeyDown(event)} tabIndex={0}>\n      <DrumMachine />\n    </div>\n  );\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport drumsReducer from \"./drumMachine/drumMachineSlice\";\nimport sequencerReducer from \"./sequencer/SequencerSlice\";\n\nexport default configureStore({\n  reducer: {\n    drums: drumsReducer,\n    sequencer: sequencerReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the state load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web state is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different state. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./state/store\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your state to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}